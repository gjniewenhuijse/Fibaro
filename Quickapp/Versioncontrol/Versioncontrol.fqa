{"name":"Versioncontrol","type":"com.fibaro.genericDevice","apiVersion":"1.2","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"0"},"title":"quickApp_device_350"},"sections":{"items":[{"components":[{"name":"button_version_check","style":{"weight":"1.2"},"text":"Version check","type":"button","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"label_version","style":{"weight":"1.2"},"text":"version info","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"button_main","style":{"weight":"0.50"},"text":"Update main","type":"button","visible":true},{"name":"button_lib","style":{"weight":"0.50"},"text":"Update Lib","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"}]}},"head":{"title":"quickApp_device_350"}}},"uiCallbacks":[{"callback":"btn_versionCheck","eventType":"onReleased","name":"button_version_check"},{"callback":"btn_updateMain","eventType":"onReleased","name":"button_main"},{"callback":"btn_updateLib","eventType":"onReleased","name":"button_lib"}],"quickAppVariables":[],"typeTemplateInitialized":true},"initialInterfaces":[],"files":[{"name":"main","isMain":true,"isOpen":false,"content":"_VERSION_MAIN = \"1.1\"\n_VERSIONDATE_MAIN = \"15.1.2024\"\n\n__TAG = \"QA_VERSIONCONTROL_MAIN_\" .. plugin.mainDeviceId\n\nfunction QuickApp:btn_versionCheck()\n    nowTime = os.date('%d-%m-%y %H:%M:%S')\n    local b = \"https://raw.githubusercontent.com/gjniewenhuijse/Fibaro/main/Quickapp/Test/version.lua\"\n    net.HTTPClient():request(b,{options={method='GET',checkCertificate=false,timeout=20000},\n    success=function(c)\n        if c.status==200 then \n            self:debug(\"succesvol\") \n            self:debug(\"main:\"..json.decode(c.data).main..\" lib:\"..json.decode(c.data).lib) \n            self:updateView(\"label_version\", \"text\", (\"main:\".._VERSION_MAIN..\"(\"..json.decode(c.data).main..\") lib:\".._VERSION_LIB..\"(\"..json.decode(c.data).lib..\")\"))\n    \telse \n\t\t    fibaro.error(__TAG,\"Error \",c.status,\" fetching \",b)\n            self:debug(\"niet succesvol\") \n\t\tend\n    end,\n    error=function(c)\n        fibaro.error(__TAG,\"Error \",c,\" fetching \",b)\n    end})\n\n    --[[\n    self:debug(nowTime..\" version main:\".._VERSION_MAIN..\" version lib:\".._VERSION_LIB)\n    self:updateView(\"label_version\", \"text\", (nowTime..\" version main:\".._VERSION_MAIN..\" version lib:\".._VERSION_LIB))\n    if tonumber(_VERSION_MAIN) <  tonumber(\"1.01\") then\n        self:debug(\"nieuwe versie\")\n    else\n        self:debug(\"nieuwste versie aanwezig\")\n    end\n    ]]\nend\n\nfunction QuickApp:btn_updateLib()\n    self:debug(\"update lib\")\n    \n    --[[\n    1. First add each  new quickAppfiles with with a loop: api.post(\"/quickApp/\" .. <id> .. \"/files\", <file>)\n    2. Then modify all exiting files with the multi-file put: api.put(\"/quickApp/\" .. <id> .. \"/files\", <files>)\n    3. Then loop and delete all files that should not be there with: api.delete(\"/quickApp/\" .. <id> .. \"/files/\" .. <filename>)\n    4. Lastly, update the properties with: api.put(\"/devices/\" .. <id>, { properties = { uiCallbacks = newUiCallbacks, viewLayout = newViewLayout,  quickAppVariables = newQquickAppVariables } } )\n    ]]\n\n    -- 2 update existing file\n    local b = \"https://raw.githubusercontent.com/gjniewenhuijse/Fibaro/main/Quickapp/Test/lib.lua\"\n    net.HTTPClient():request(b,{options={method='GET',checkCertificate=false,timeout=20000}\n\t,success=function(c)\n\t\tif c.status==200 then \n            self:debug(\"data: \"..c.data)\n\t\t\t--local d={isMain=false,type='lua',isOpen=false,name='lib',content=c.data}\n            --https://forum.fibaro.com/topic/52086-how-are-you-updating-your-quickapps/\n            local fs = api.get(\"/quickApp/\"..plugin.mainDeviceId..\"/files/lib\")\n            self:debug(\"fs data: \"..fs.content)\n\t\t\tlocal e,c=api.put(\"/quickApp/\"..plugin.mainDeviceId..\"/files/lib\",fs.content)\n\t\t\tif c~=200 then \n\t\t\t\tself:debug(\"fout tijdens installatie 1: \"..json.encode(e))\n\t\t\tend \n\t\telse \n\t\t\tself:debug(\"fout tijdens installatie 2: \"..c.status)\n\t\tend \n\tend\n\t,error=function(c)\n\t\tself:debug(\"fout tijdens installatie 3\")\n\tend})\n\n    --[[ 1 make new file\n    local b = \"https://raw.githubusercontent.com/gjniewenhuijse/Fibaro/main/Quickapp/Test/lib.lua\"\n\tnet.HTTPClient():request(b,{options={method='GET',checkCertificate=false,timeout=20000}\n\t,success=function(c)\n\t\tif c.status==200 then \n            self:debug(\"data: \"..c.data)\n\t\t\tlocal d={isMain=false,type='lua',isOpen=false,name='lib2',content=c.data}\n\t\t\tlocal e,c=api.post(\"/quickApp/\"..plugin.mainDeviceId..\"/files\",d)\n\t\t\tif c~=200 then \n\t\t\t\tself:debug(\"fout tijdens installatie 1: \"..c)\n\t\t\tend \n\t\telse \n\t\t\tself:debug(\"fout tijdens installatie 2: \"..c.status)\n\t\tend \n\tend\n\t,error=function(c)\n\t\tself:debug(\"fout tijdens installatie 3\")\n\tend})\n    ]]\nend\n\nfunction QuickApp:onInit()\n    self:debug(\"onInit version control\") \n    self:test('check')\nend\n"},{"name":"lib","isMain":false,"isOpen":true,"content":"_VERSION_LIB = \"1.1\"\r\n_VERSIONDATE_LIB = \"15.1.2024\"\r\n\r\nfunction QuickApp:test(iInput)\r\n    self:debug(_VERSION_LIB..' input: '..iInput)\r\nend"}]}
